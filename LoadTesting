Could you please confirm whether the issues reported by Leo have been resolved? The performance testing team has encountered several anomalies while recording test scenarios between the Login Portal and Infuse recently, and we are currently unable to diagnose the cause.


Certainly! Below is a Groovy script example for ScriptRunner in Jira that you can use to limit the values of a radio button custom field named "Castlefield". This script will be used in a Behaviour that makes the field required and removes the 'None' option:

```groovy
import com.onresolve.jira.groovy.user.FieldBehaviours
import com.atlassian.jira.component.ComponentAccessor

def customFieldManager = ComponentAccessor.getCustomFieldManager()
def optionsManager = ComponentAccessor.getOptionsManager()

def castleField = getFieldByName("Castlefield")
castleField.setRequired(true) // Make the field required

// Get the custom field object for "Castlefield"
def customField = customFieldManager.getCustomFieldObjectsByName("Castlefield").find()
if (customField) {
    // Get the config for the current context
    def config = customField.getRelevantConfig(getIssueContext())
    // Get the current options
    def options = optionsManager.getOptions(config)
    // Remove 'None' option if it exists
    options.findAll { it.value == "None" }.each { options.remove(it) }
}
```

Please replace "Castlefield" with the exact name of your radio button custom field. This script assumes that "None" is a value in your options list. If "None" is not a value but rather the absence of a value, you might not need to remove it explicitly; making the field required should suffice.

Remember to test this script in a safe environment before deploying it to your production instance to ensure it behaves as expected. If you encounter any issues or need further customization, feel free to ask!

Hi,

Do you know if it is possible to access usage information for Maven packages uploaded by QM? We would like to monitor how often these packages are downloaded to eliminate the use of outdated packages across the department. Could you please advise whether Nexus provides this capability?

Thank you.


As per your request, I am forwarding the outcome of the software scan conducted by SonarQube, aimed at analyzing the quantity of lines of code within the test automation projects furnished by our test automation leaders. Across 120 projects, we have identified a total of 2,327,951 (or 2.3 million) physical lines of code, with blank characters or comments excluded. For detailed findings, please refer to the dedicated section on our SharePoint site accessible via the provided link.
This intermittent issue occurs sporadically across various repositories and does not appear to be isolated to a specific one. While downloads may proceed smoothly for certain repositories, the recurring factor appears to be the size of the repository in question. Notably, when attempting to checkout a sizable repository for the first time, there is a likelihood of encountering the aforementioned error interrupting the download process. This observation extends beyond the current repository under consideration to encompass similar experiences across other repositories. It is suggested that a thorough examination of the logs may provide valuable insights into potential underlying causes. Failing such examination, pinpointing the exact root cause of the issue may prove challenging.

Certainly, while the current approach is acceptable, it's important to avoid using the "Description" label for the two fields in Jira, as all Jira fields are universally visible and could potentially lead to user confusion. Kindly suggest two alternative names that do not include the "Description" label.
